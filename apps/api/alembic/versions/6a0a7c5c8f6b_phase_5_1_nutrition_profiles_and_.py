"""Phase 5.1: nutrition profiles and nutrition info tables

Revision ID: 6a0a7c5c8f6b
Revises: 9cfae00d59c4
Create Date: 2025-10-28 20:18:20.284530

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '6a0a7c5c8f6b'
down_revision: Union[str, Sequence[str], None] = '9cfae00d59c4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_nutrition_profiles',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('calories_daily', sa.Integer(), nullable=True),
    sa.Column('protein_daily_g', sa.Integer(), nullable=True),
    sa.Column('carbs_daily_g', sa.Integer(), nullable=True),
    sa.Column('fat_daily_g', sa.Integer(), nullable=True),
    sa.Column('restrictions', sa.JSON(), nullable=True),
    sa.Column('cultural_notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_nutrition_profiles_user_id'), 'user_nutrition_profiles', ['user_id'], unique=True)
    op.create_table('recipe_nutrition_info',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('recipe_memory_id', sa.Uuid(), nullable=False),
    sa.Column('calories', sa.Integer(), nullable=True),
    sa.Column('protein_g', sa.Float(), nullable=True),
    sa.Column('carbs_g', sa.Float(), nullable=True),
    sa.Column('fat_g', sa.Float(), nullable=True),
    sa.Column('micronotes', sa.JSON(), nullable=True),
    sa.Column('computed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['recipe_memory_id'], ['recipe_memory.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recipe_nutrition_info_recipe_memory_id'), 'recipe_nutrition_info', ['recipe_memory_id'], unique=True)
    op.drop_index(op.f('ix_subscriptions_user_id'), table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_variant_usage_created_at'), table_name='variant_usage')
    op.drop_index(op.f('ix_variant_usage_user_id'), table_name='variant_usage')
    op.drop_index(op.f('ix_variant_usage_variant_type'), table_name='variant_usage')
    op.drop_table('variant_usage')
    op.drop_index(op.f('ix_usage_user_id'), table_name='usage')
    op.drop_table('usage')
    op.add_column('grocery_items', sa.Column('household_id', sa.Uuid(), nullable=False))
    op.add_column('grocery_items', sa.Column('assigned_to_user', sa.Uuid(), nullable=True))
    op.create_index(op.f('ix_grocery_items_household_id'), 'grocery_items', ['household_id'], unique=False)
    op.create_foreign_key(None, 'grocery_items', 'households', ['household_id'], ['id'])
    op.create_foreign_key(None, 'grocery_items', 'users', ['assigned_to_user'], ['id'])
    op.add_column('meal_plans', sa.Column('household_id', sa.Uuid(), nullable=False))
    op.add_column('meal_plans', sa.Column('notes_per_user', sa.JSON(), nullable=True))
    op.create_index(op.f('ix_meal_plans_household_id'), 'meal_plans', ['household_id'], unique=False)
    op.create_foreign_key(None, 'meal_plans', 'households', ['household_id'], ['id'])
    op.add_column('pantry_items', sa.Column('household_id', sa.Uuid(), nullable=False))
    op.add_column('pantry_items', sa.Column('added_by_user_id', sa.Uuid(), nullable=False))
    op.create_index(op.f('ix_pantry_items_household_id'), 'pantry_items', ['household_id'], unique=False)
    op.create_foreign_key(None, 'pantry_items', 'households', ['household_id'], ['id'])
    op.create_foreign_key(None, 'pantry_items', 'users', ['added_by_user_id'], ['id'])
    op.add_column('users', sa.Column('subscription_status', sa.String(), nullable=False))
    op.add_column('users', sa.Column('stripe_customer_id', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'stripe_customer_id')
    op.drop_column('users', 'subscription_status')
    op.drop_constraint(None, 'pantry_items', type_='foreignkey')
    op.drop_constraint(None, 'pantry_items', type_='foreignkey')
    op.drop_index(op.f('ix_pantry_items_household_id'), table_name='pantry_items')
    op.drop_column('pantry_items', 'added_by_user_id')
    op.drop_column('pantry_items', 'household_id')
    op.drop_constraint(None, 'meal_plans', type_='foreignkey')
    op.drop_index(op.f('ix_meal_plans_household_id'), table_name='meal_plans')
    op.drop_column('meal_plans', 'notes_per_user')
    op.drop_column('meal_plans', 'household_id')
    op.drop_constraint(None, 'grocery_items', type_='foreignkey')
    op.drop_constraint(None, 'grocery_items', type_='foreignkey')
    op.drop_index(op.f('ix_grocery_items_household_id'), table_name='grocery_items')
    op.drop_column('grocery_items', 'assigned_to_user')
    op.drop_column('grocery_items', 'household_id')
    op.create_table('usage',
    sa.Column('id', sa.CHAR(length=32), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('period', sa.VARCHAR(), nullable=False),
    sa.Column('variants_generated', sa.INTEGER(), nullable=False),
    sa.Column('recipes_imported', sa.INTEGER(), nullable=False),
    sa.Column('cooking_sessions', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.CHAR(length=32), nullable=False),
    sa.Column('features', sqlite.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usage_user_id'), 'usage', ['user_id'], unique=False)
    op.create_table('variant_usage',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.CHAR(length=32), nullable=False),
    sa.Column('recipe_id', sa.CHAR(length=32), nullable=False),
    sa.Column('variant_type', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_variant_usage_variant_type'), 'variant_usage', ['variant_type'], unique=False)
    op.create_index(op.f('ix_variant_usage_user_id'), 'variant_usage', ['user_id'], unique=False)
    op.create_index(op.f('ix_variant_usage_created_at'), 'variant_usage', ['created_at'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.CHAR(length=32), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('plan', sa.VARCHAR(), nullable=False),
    sa.Column('status', sa.VARCHAR(), nullable=False),
    sa.Column('current_period_start', sa.DATETIME(), nullable=False),
    sa.Column('current_period_end', sa.DATETIME(), nullable=False),
    sa.Column('cancel_at_period_end', sa.BOOLEAN(), nullable=False),
    sa.Column('user_id', sa.CHAR(length=32), nullable=False),
    sa.Column('stripe_subscription_id', sa.VARCHAR(), nullable=True),
    sa.Column('stripe_customer_id', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscriptions_user_id'), 'subscriptions', ['user_id'], unique=1)
    op.drop_index(op.f('ix_recipe_nutrition_info_recipe_memory_id'), table_name='recipe_nutrition_info')
    op.drop_table('recipe_nutrition_info')
    op.drop_index(op.f('ix_user_nutrition_profiles_user_id'), table_name='user_nutrition_profiles')
    op.drop_table('user_nutrition_profiles')
    # ### end Alembic commands ###
