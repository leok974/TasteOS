[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tasteos-api"
version = "0.1.0"
description = "TasteOS backend API built with FastAPI and LangGraph"
authors = [
    {name = "TasteOS Team"}
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sqlmodel>=0.0.11",
    "alembic>=1.12.0",
    "psycopg2-binary>=2.9.8",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.3",
    "langchain>=0.0.340",
    "langchain-openai>=0.0.2",
    "langgraph>=0.0.20",
    "openai>=1.3.0",
    "stripe>=10.0.0",
    "httpx>=0.25.0",
    "python-dotenv>=1.0.0",
    "beautifulsoup4>=4.12.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0"
]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.ruff.lint]
select = ["E", "F", "I", "N", "UP", "ANN", "S", "B", "A", "COM", "C4", "DTZ", "T10", "EM", "ISC", "ICN", "G", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "TD", "FIX", "ERA", "PD", "PGH", "PL", "TRY", "FLY", "NPY", "AIR", "PERF", "FURB", "LOG", "RUF"]
ignore = ["ANN101", "ANN102", "ANN401", "S104", "S108", "PLR0913", "PLR2004", "TRY003"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tasteos_api/tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "--cov=tasteos_api --cov-report=term-missing"
markers = [
    "phase3: Stable, CI-blocking tests for Pantry / Planner / Shopping async API (Phase 3 baseline)",
    "phase4: Household sharing, cultural memory, and access control tests (Family Mode)",
    "phase5: Nutrition intelligence (Health Mode) and household onboarding / invite flow (Growth Mode)",
    "phase6: experience mode (dashboard UI, invites UX, landing, switcher)",
]

[tool.pyright]
pythonVersion = "3.13"
typeCheckingMode = "basic"
reportUnknownParameterType = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownVariableType = false
reportMissingTypeStubs = false
reportUnusedImport = "warning"
