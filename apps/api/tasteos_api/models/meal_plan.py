"""
Meal plan model for TasteOS API.

This model represents AI-generated meal plans for users.
"""

from datetime import date as Date, datetime
from typing import Optional, List, Dict, Any
from uuid import UUID

from sqlmodel import Field, Column, JSON, SQLModel

from tasteos_api.models import BaseModel


class MealPlan(BaseModel, table=True):
    """
    Represents a daily meal plan generated by AI.

    A 7-day plan consists of 7 MealPlan rows (one per day).
    Each day includes breakfast, lunch, dinner, and optional snacks,
    with aggregate nutrition data.
    """

    __tablename__ = "meal_plans"

    user_id: UUID = Field(foreign_key="users.id", index=True)
    household_id: UUID = Field(foreign_key="households.id", index=True)

    # Date this plan is for
    date: Date = Field(index=True)

    # Meals for this day (stored as JSON arrays of RecipeRef objects)
    breakfast: str = Field(default="[]", sa_column=Column(JSON))
    lunch: str = Field(default="[]", sa_column=Column(JSON))
    dinner: str = Field(default="[]", sa_column=Column(JSON))
    snacks: str = Field(default="[]", sa_column=Column(JSON))

    # Per-user notes for meal plan (Phase 4 - Family Mode)
    notes_per_user: str = Field(default="{}", sa_column=Column(JSON))

    # Aggregate nutrition for the day
    total_calories: Optional[int] = None
    total_protein_g: Optional[float] = None
    total_carbs_g: Optional[float] = None
    total_fat_g: Optional[float] = None

    # Optional notes from the planner agent
    notes: Optional[str] = None

    # Batch identifier for multi-day plans
    plan_batch_id: Optional[UUID] = None


class MealPlanCreate(SQLModel):
    """Schema for creating a meal plan."""

    date: Date
    breakfast: List[Dict[str, Any]] = []
    lunch: List[Dict[str, Any]] = []
    dinner: List[Dict[str, Any]] = []
    snacks: List[Dict[str, Any]] = []
    total_calories: Optional[int] = None
    total_protein_g: Optional[float] = None
    total_carbs_g: Optional[float] = None
    total_fat_g: Optional[float] = None
    notes: Optional[str] = None
    plan_batch_id: Optional[UUID] = None


class MealPlanRead(SQLModel):
    """Schema for reading a meal plan."""

    id: UUID
    user_id: UUID
    date: Date
    breakfast: List[Dict[str, Any]]
    lunch: List[Dict[str, Any]]
    dinner: List[Dict[str, Any]]
    snacks: List[Dict[str, Any]]
    total_calories: Optional[int]
    total_protein_g: Optional[float]
    total_carbs_g: Optional[float]
    total_fat_g: Optional[float]
    notes: Optional[str]
    plan_batch_id: Optional[UUID]
    created_at: datetime
    updated_at: datetime


class GeneratePlanRequest(SQLModel):
    """Request schema for generating a meal plan."""

    days: int = 7
    goals: Dict[str, Any] = {}  # e.g., {"calories": 2200, "protein_g": 150}
    dietary_preferences: List[str] = []  # e.g., ["high-protein", "no-dairy"]
    budget: Optional[str] = "normal"  # "low", "normal", "premium"


class GeneratePlanResponse(SQLModel):
    """Response schema for plan generation."""

    plan_ids: List[str]
    summary: str
    start_date: str
